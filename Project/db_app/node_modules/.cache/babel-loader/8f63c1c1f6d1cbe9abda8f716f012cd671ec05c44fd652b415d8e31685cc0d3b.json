{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmeta\\\\source\\\\ThinkBig\\\\Project\\\\db_app\\\\src\\\\components\\\\FilterBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = {\n  스포츠: [\"축구\", \"야구\", \"테니스\", \"탁구\"],\n  전략게임: [\"체스\", \"장기\", \"바둑\", \"보드게임\"],\n  e스포츠: [\"롤\", \"오버워치\", \"배그\"]\n};\nconst FilterBox = ({\n  selectedSubCategories,\n  setSelectedSubCategories\n}) => {\n  _s();\n  // 1️⃣ 초기 선택값은 \"전체\"\n  const [selectedCategory, setSelectedCategory] = useState(\"전체\");\n\n  // 2️⃣ 대분류 목록에 \"전체\" 추가\n  const allCategories = [\"전체\", ...Object.keys(categories)];\n\n  // 3️⃣ 전체일 경우 모든 소분류를 합쳐서 보여줌\n  const getSubCategories = () => {\n    if (selectedCategory === \"전체\") {\n      return Object.values(categories).flat();\n    } else {\n      return categories[selectedCategory];\n    }\n  };\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setSelectedSubCategories([]); // 선택된 대분류가 바뀌면 필터 초기화\n  };\n  const handleSubCategoryToggle = sub => {\n    if (selectedSubCategories.includes(sub)) {\n      setSelectedSubCategories(selectedSubCategories.filter(s => s !== sub));\n    } else {\n      setSelectedSubCategories([...selectedSubCategories, sub]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-3\",\n      children: \"\\uC885\\uBAA9\\uBCC4 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-2 flex-wrap mb-3\",\n      children: allCategories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${cat === selectedCategory ? \"btn-primary\" : \"btn-outline-primary\"}`,\n        onClick: () => handleCategoryClick(cat),\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-3 flex-wrap\",\n      children: getSubCategories().map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: `check-${sub}`,\n          checked: selectedSubCategories.includes(sub),\n          onChange: () => handleSubCategoryToggle(sub)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `check-${sub}`,\n          children: sub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, sub, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterBox, \"I2IfiMnxcjmsoW9oTLXbLA4nbm8=\");\n_c = FilterBox;\nexport default FilterBox;\nvar _c;\n$RefreshReg$(_c, \"FilterBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","categories","스포츠","전략게임","e스포츠","FilterBox","selectedSubCategories","setSelectedSubCategories","_s","selectedCategory","setSelectedCategory","allCategories","Object","keys","getSubCategories","values","flat","handleCategoryClick","category","handleSubCategoryToggle","sub","includes","filter","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","type","id","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/nmeta/source/ThinkBig/Project/db_app/src/components/FilterBox.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst categories = {\r\n  스포츠: [\"축구\", \"야구\", \"테니스\", \"탁구\"],\r\n  전략게임: [\"체스\", \"장기\", \"바둑\", \"보드게임\"],\r\n  e스포츠: [\"롤\", \"오버워치\", \"배그\"],\r\n};\r\n\r\nconst FilterBox = ({ selectedSubCategories, setSelectedSubCategories }) => {\r\n  // 1️⃣ 초기 선택값은 \"전체\"\r\n  const [selectedCategory, setSelectedCategory] = useState(\"전체\");\r\n\r\n  // 2️⃣ 대분류 목록에 \"전체\" 추가\r\n  const allCategories = [\"전체\", ...Object.keys(categories)];\r\n\r\n  // 3️⃣ 전체일 경우 모든 소분류를 합쳐서 보여줌\r\n  const getSubCategories = () => {\r\n    if (selectedCategory === \"전체\") {\r\n      return Object.values(categories).flat();\r\n    } else {\r\n      return categories[selectedCategory];\r\n    }\r\n  };\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category);\r\n    setSelectedSubCategories([]); // 선택된 대분류가 바뀌면 필터 초기화\r\n  };\r\n\r\n  const handleSubCategoryToggle = (sub) => {\r\n    if (selectedSubCategories.includes(sub)) {\r\n      setSelectedSubCategories(selectedSubCategories.filter((s) => s !== sub));\r\n    } else {\r\n      setSelectedSubCategories([...selectedSubCategories, sub]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <h5 className=\"mb-3\">종목별 보기</h5>\r\n      <div className=\"d-flex gap-2 flex-wrap mb-3\">\r\n        {allCategories.map((cat) => (\r\n          <button\r\n            key={cat}\r\n            className={`btn ${cat === selectedCategory ? \"btn-primary\" : \"btn-outline-primary\"}`}\r\n            onClick={() => handleCategoryClick(cat)}\r\n          >\r\n            {cat}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"d-flex gap-3 flex-wrap\">\r\n        {getSubCategories().map((sub) => (\r\n          <div key={sub} className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={`check-${sub}`}\r\n              checked={selectedSubCategories.includes(sub)}\r\n              onChange={() => handleSubCategoryToggle(sub)}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`check-${sub}`}>\r\n              {sub}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;EAC9BC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;EAChCC,IAAI,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI;AAC1B,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAAEC,qBAAqB;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EACzE;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAMa,aAAa,GAAG,CAAC,IAAI,EAAE,GAAGC,MAAM,CAACC,IAAI,CAACZ,UAAU,CAAC,CAAC;;EAExD;EACA,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIL,gBAAgB,KAAK,IAAI,EAAE;MAC7B,OAAOG,MAAM,CAACG,MAAM,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,OAAOf,UAAU,CAACQ,gBAAgB,CAAC;IACrC;EACF,CAAC;EAED,MAAMQ,mBAAmB,GAAIC,QAAQ,IAAK;IACxCR,mBAAmB,CAACQ,QAAQ,CAAC;IAC7BX,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMY,uBAAuB,GAAIC,GAAG,IAAK;IACvC,IAAId,qBAAqB,CAACe,QAAQ,CAACD,GAAG,CAAC,EAAE;MACvCb,wBAAwB,CAACD,qBAAqB,CAACgB,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,GAAG,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLb,wBAAwB,CAAC,CAAC,GAAGD,qBAAqB,EAAEc,GAAG,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MAAIwB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC7B,OAAA;MAAKwB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EACzCd,aAAa,CAACmB,GAAG,CAAEC,GAAG,iBACrB/B,OAAA;QAEEwB,SAAS,EAAE,OAAOO,GAAG,KAAKtB,gBAAgB,GAAG,aAAa,GAAG,qBAAqB,EAAG;QACrFuB,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACc,GAAG,CAAE;QAAAN,QAAA,EAEvCM;MAAG,GAJCA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN7B,OAAA;MAAKwB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCX,gBAAgB,CAAC,CAAC,CAACgB,GAAG,CAAEV,GAAG,iBAC1BpB,OAAA;QAAewB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACnCzB,OAAA;UACEwB,SAAS,EAAC,kBAAkB;UAC5BS,IAAI,EAAC,UAAU;UACfC,EAAE,EAAE,SAASd,GAAG,EAAG;UACnBe,OAAO,EAAE7B,qBAAqB,CAACe,QAAQ,CAACD,GAAG,CAAE;UAC7CgB,QAAQ,EAAEA,CAAA,KAAMjB,uBAAuB,CAACC,GAAG;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACF7B,OAAA;UAAOwB,SAAS,EAAC,kBAAkB;UAACa,OAAO,EAAE,SAASjB,GAAG,EAAG;UAAAK,QAAA,EACzDL;QAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAVAT,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9DIH,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAgEf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}